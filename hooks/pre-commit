#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ascii filenames set this variable to true.
allownonascii=$(git config hooks.allownonascii)
echo "Checking against $against"

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ascii filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	echo "Error: Attempt to add a non-ascii file name."
	exit 1
fi

# Run lint
for f in `git diff-index --name-only ${against} -- | egrep *.py$`; do
  echo "Running pylint $f"
  pylint $f
  if [ $? != 0 ]
  then
    echo "Lint checks failed"
    exit 1
  fi
done

# Rebuild the xpi if any javascript files changed and add it. We could run lint
# against js_files, but jslint is awfully picky.
js_files=`git diff-index --name-only ${against} -- | egrep *.js$`
if [ $js_files ]
then
  echo "Building xpi"
  cfx xpi
  git add blushproof.xpi
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check $against --
